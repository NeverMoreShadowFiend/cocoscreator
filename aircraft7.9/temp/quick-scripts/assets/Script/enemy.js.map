{"version":3,"sources":["enemy.js"],"names":["cc","Class","extends","Component","properties","xMinSpeed","default","type","Integer","tooltip","xMaxSpeed","yMinSpeed","yMaxSpeed","initHP","initSpriteFrame","SpriteFrame","score","enemyDownClip","AudioClip","onLoad","director","getCollisionManager","enabled","xSpeed","Math","random","ySpeed","random0To1","parentNode","node","parent","name","enemyGroup","getComponent","console","log","init","group","hP","nSprite","Sprite","spriteFrame","update","dt","eState","D","commonInfo","gameState","start","scores","getScore","y","x","onCollisionEnter","other","self","bullet","hpDrop","onDead","onFinished","event","enemyDied","anim","Animation","animName","play","on","audioEngine","playEffect"],"mappings":"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","file":"enemy.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        xMinSpeed: {\n            default:0,\n            type:cc.Integer,\n            tooltip: 'x轴最小速度',\n        },\n        xMaxSpeed: {\n            default:0,\n            type:cc.Integer,\n            tooltip: 'x轴最大速度',\n        },\n        yMinSpeed: {\n            default:0,\n            type:cc.Integer,\n            tooltip: 'y轴最小速度',\n        },\n        yMaxSpeed: { \n            default:0,\n            type:cc.Integer,\n            tooltip: 'y轴最大速度',\n        },\n        initHP: {\n            default:0,\n            type:cc.Integer,\n            tooltip: '初始生命值',\n        }, \n        initSpriteFrame:{\n            default: null,\n            type: cc.SpriteFrame,\n            tooltip: '初始化的图像'\n        }, \n        score: {\n            default:0,\n            type:cc.Integer,\n            tooltip: '死后获得的分数'\n\n        },\n        enemyDownClip: cc.AudioClip\n    },\n\n    // use this for initialization\n    onLoad: function () {\n       // console.log('enemy onload');\n        cc.director.getCollisionManager().enabled=true;\n        \n        this.xSpeed = Math.random()*(this.xMaxSpeed-this.xMinSpeed) + this.xMinSpeed;\n        this.ySpeed = cc.random0To1()*(this.yMaxSpeed-this.yMinSpeed) + this.yMinSpeed;\n        var parentNode = this.node.parent;\n        if(parentNode.name=='enemyGroup'){\n           // console.log('6+++++++++++++++++++++:'+parentNode.name);\n            this.enemyGroup = this.node.parent.getComponent('enemyGroup');\n        }else{\n           // console.log('7+++++++++++++++++++++:'+parentNode.name,parentNode.parent.name);\n           // this.enemyGroup=parentNode.parent.getComponent('prefabenemyGroup');\n           console.log('prefabenemynull');\n        }\n        \n\n    },\n    init: function(){\n        \n        if (this.node.group != 'enemy'){\n           // console.log('group6+++++++++++++++++++++:'+this.node.group);\n            this.node.group = 'enemy';\n          //  console.log('group6+++++++++++++++++++++:'+this.node.group);\n        }\n        if (this.hP != this.initHP){\n            this.hP = this.initHP;\n        }\n        var nSprite = this.node.getComponent(cc.Sprite);\n        if (nSprite.spriteFrame != this.initSpriteFrame){\n            nSprite.spriteFrame = this.initSpriteFrame;\n        }\n      //  console.log('===========sprite');\n        \n    },\n    \n    // called every frame, uncomment this function to activate update callback\n    update: function (dt) {\n       // console.log('+++++++++++++++++++++++++++++++++++++:'+this.enemyGroup.eState,D.commonInfo.gameState.start);\n        if (this.enemyGroup.eState != D.commonInfo.gameState.start){\n\n           // console.log('return from update function');\n            return ;\n        }\n       // 分数不同 速度不同\n        var scores = this.enemyGroup.getScore();\n        if(scores<=50000){\n            this.node.y += dt*this.ySpeed;\n        }\n        else if(scores>50000&&scores<=100000){\n            this.node.y += dt*this.ySpeed-0.5;\n        }\n        else if(scores>100000&&scores<=150000){\n            this.node.y += dt*this.ySpeed-1;\n        }\n        else if(scores>150000&&scores<=200000){\n            this.node.y += dt*this.ySpeed-1.5;\n        }\n        else if(scores>200000&&scores<=300000){\n            this.node.y += dt*this.ySpeed-2;\n        } else{\n            this.node.y += dt*this.ySpeed-3;\n        }\n        this.node.x += dt*this.xSpeed;\n       // 出屏幕后 回收节点\n       //console.log(\"出屏幕后的操作\");\n        // if (this.node.y < -this.node.parent.height/2){\n        //     console.log('出屏幕后的操作');\n        //     this.enemyGroup.enemyDied(this.node,0);\n        // }\n    },\n    //碰撞检测\n    onCollisionEnter: function(other,self){\n        if (other.node.group != 'bullet'){\n            return ;\n        }\n        var bullet = other.node.getComponent('bullet');\n        \n        if (this.hP>0){//防止再次碰撞\n            this.hP -= bullet.hpDrop;\n        } else {\n            return ;\n        }\n        if (this.hP <= 0){\n            this.onDead(self.node.name);\n        }\n    },\n    //动画结束后 动画节点回收\n    onFinished: function(event) { \n        this.enemyGroup.enemyDied(this.node, this.score);\n    },\n\n    onDead:function(name){\n        this.node.group = 'default'; //不让动画在执行碰撞\n        //播放动画\n        var anim = this.getComponent(cc.Animation);\n        var animName = name + 'ani';\n        anim.play(animName);\n        anim.on('finished',  this.onFinished, this);\n        //播放音效\n        cc.audioEngine.playEffect(this.enemyDownClip, false);  \n    }\n    \n});\n"]}